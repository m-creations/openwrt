--- /dev/null
+++ b/CMakeCache-x86_64.txt
@@ -0,0 +1,64 @@
+#
+# This file is used to preload the CMake cache as described
+# in http://www.vtk.org/Wiki/CMake_Cross_Compiling
+#
+
+SET(HAVE_IB_ATOMIC_PTHREAD_T_GCC 1 CACHE INTERNAL "doc")
+
+# Test HAVE_IB_ATOMIC_PTHREAD_T_GCC
+SET(HAVE_IB_ATOMIC_PTHREAD_T_GCC 1 CACHE INTERNAL "doc")
+
+# Result of TRY_COMPILE
+SET(HAVE_IB_ATOMIC_PTHREAD_T_GCC_COMPILED TRUE CACHE INTERNAL "doc")
+
+# Result of TRY_RUN
+SET(HAVE_IB_ATOMIC_PTHREAD_T_GCC_EXITCODE 0 CACHE INTERNAL "doc")
+
+# Test HAVE_IB_GCC_ATOMIC_BUILTINS
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS 1 CACHE INTERNAL "doc")
+
+# Test HAVE_IB_GCC_ATOMIC_BUILTINS_64
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS_64 1 CACHE INTERNAL "doc")
+
+# Result of TRY_COMPILE
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS_64_COMPILED TRUE CACHE INTERNAL "doc")
+
+# Result of TRY_RUN
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS_64_EXITCODE 0 CACHE INTERNAL "doc")
+
+# Test HAVE_IB_GCC_ATOMIC_BUILTINS_BYTE
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS_BYTE 1 CACHE INTERNAL "doc")
+
+# Result of TRY_COMPILE
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS_BYTE_COMPILED TRUE CACHE INTERNAL "doc")
+
+# Result of TRY_RUN
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS_BYTE_EXITCODE 0 CACHE INTERNAL "doc")
+
+# Result of TRY_COMPILE
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS_COMPILED TRUE CACHE INTERNAL "doc")
+
+# Result of TRY_RUN
+SET(HAVE_IB_GCC_ATOMIC_BUILTINS_EXITCODE 0 CACHE INTERNAL "doc")
+
+# Test HAVE_IB_GCC_ATOMIC_THREAD_FENCE
+SET(HAVE_IB_GCC_ATOMIC_THREAD_FENCE 1 CACHE INTERNAL "doc")
+
+# Result of TRY_COMPILE
+SET(HAVE_IB_GCC_ATOMIC_THREAD_FENCE_COMPILED TRUE CACHE INTERNAL "doc")
+
+# Result of TRY_RUN
+SET(HAVE_IB_GCC_ATOMIC_THREAD_FENCE_EXITCODE 0 CACHE INTERNAL "doc")
+
+# Test HAVE_IB_GCC_SYNC_SYNCHRONISE
+SET(HAVE_IB_GCC_SYNC_SYNCHRONISE 1 CACHE INTERNAL "doc")
+
+# Result of TRY_COMPILE
+SET(HAVE_IB_GCC_SYNC_SYNCHRONISE_COMPILED TRUE CACHE INTERNAL "doc")
+
+# Result of TRY_RUN
+SET(HAVE_IB_GCC_SYNC_SYNCHRONISE_EXITCODE 0 CACHE INTERNAL "doc")
+
+# Stack grows direction
+SET(STACK_DIRECTION -1 CACHE INTERNAL "doc")
+
